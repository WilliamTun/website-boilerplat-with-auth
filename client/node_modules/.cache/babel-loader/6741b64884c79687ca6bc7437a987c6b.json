{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/williamtun/Documents/Code_Hero62React2/client/src/components/auth/Register.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState } from 'react';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport { setAlert } from '../../actions/alert';\nimport PropTypes from 'prop-types';\n\nconst Register = ({\n  setAlert\n}) => {\n  _s();\n\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    password: '',\n    password2: ''\n  });\n  const {\n    name,\n    email,\n    password,\n    password2\n  } = formData;\n\n  const onChange = e => setFormData({ ...formData,\n    [e.target.name]: e.target.value\n  });\n\n  const onSubmit = async e => {\n    e.preventDefault();\n\n    if (password !== password2) {\n      props.setAlert('Passwords do not match');\n    } else {\n      const newUser = {\n        name,\n        email,\n        password\n      };\n\n      try {\n        const config = {\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        };\n        const body = JSON.stringify(newUser);\n        const res = await axios.post('/api/users', body, config);\n        console.log(res.data);\n      } catch (err) {\n        console.error(err.response.data);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"large text-primary\",\n      children: \" \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"lead\",\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-user\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), \" Create your account\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: e => onSubmit(e),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Name\",\n          name: \"name\",\n          value: name,\n          onChange: e => onChange(e),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          placeholder: \"Email address\",\n          name: \"email\",\n          value: email,\n          onChange: e => onChange(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Password\",\n          name: \"password\",\n          minLength: \"6\",\n          value: password,\n          onChange: e => onChange(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Confirm Password\",\n          name: \"password2\",\n          minLength: \"6\",\n          value: password2,\n          onChange: e => onChange(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        value: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"my-1\",\n      children: [\"Already have an account? \", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"login\",\n        children: \" Sign In \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 42\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Register, \"+ZgLT5Mo6u3MJVHg273CKTG10iI=\");\n\n_c = Register;\nRegister.propTypes = {\n  setAlert: PropTypes.func.isRequired\n};\nexport default connect(null, {\n  setAlert\n})(Register);\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/Users/williamtun/Documents/Code_Hero62React2/client/src/components/auth/Register.js"],"names":["React","Fragment","useState","connect","axios","setAlert","PropTypes","Register","formData","setFormData","name","email","password","password2","onChange","e","target","value","onSubmit","preventDefault","props","newUser","config","headers","body","JSON","stringify","res","post","console","log","data","err","error","response","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React, { Fragment, useState } from 'react'\nimport { connect } from 'react-redux'\nimport axios from 'axios'\nimport { setAlert } from '../../actions/alert'\nimport PropTypes from 'prop-types'\n\nconst Register = ({ setAlert }) => {\n    const [formData, setFormData] = useState({\n        name: '',\n        email: '',\n        password: '',\n        password2: ''\n    });\n\n    const { name, email, password, password2 } = formData;\n    \n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\n\n    const onSubmit = async e => {\n        e.preventDefault();\n        if(password !== password2) {\n            props.setAlert('Passwords do not match')\n\n        } else {\n            const newUser = {\n                name,\n                email,\n                password\n            }\n\n            try {\n                const config = {\n                    headers: {\n                        'Content-Type': 'application/json'\n                    }\n                }\n\n                const body = JSON.stringify(newUser);\n                const res = await axios.post('/api/users', body, config);\n                console.log(res.data)\n            } catch(err) {\n                console.error(err.response.data);\n            }\n        }\n    }\n\n\n    return (\n        <Fragment>\n            <h1 className=\"large text-primary\"> </h1>\n            <p className='lead'>\n                <i className=\"fas fa-user\" /> Create your account\n            </p>\n            <form className=\"form\" onSubmit={e => onSubmit(e)}>\n                <div className=\"form-group\">\n                    <input \n                        type=\"text\" \n                        placeholder=\"Name\" \n                        name=\"name\"\n                        value={name}\n                        onChange={e => onChange(e)} \n                        required \n                    />\n                </div>\n                <div className=\"form-group\">\n                    <input type=\"email\" \n                    placeholder=\"Email address\" \n                    name=\"email\" \n                    value={email}\n                    onChange={e => onChange(e)} \n                    />\n                </div>\n\n                <div className=\"form-group\">\n                    <input \n                        type=\"password\"\n                        placeholder=\"Password\"\n                        name=\"password\"\n                        minLength=\"6\"\n                        value={password}\n                        onChange={e => onChange(e)} \n                    />\n                </div>\n\n                <div className=\"form-group\">\n                    <input \n                        type=\"password\"\n                        placeholder=\"Confirm Password\"\n                        name=\"password2\"\n                        minLength=\"6\"\n                        value={password2}\n                        onChange={e => onChange(e)} \n                    />\n                </div>\n                <input type ='submit' className='btn btn-primary' value='Register' />\n            </form>\n\n            <p className='my-1'>\n                Already have an account? <a href='login'> Sign In </a>\n            </p>\n\n        </Fragment>\n    )\n}\n\nRegister.propTypes = {\n    setAlert: PropTypes.func.isRequired \n}\n\nexport default connect(null, { setAlert })(Register);"]},"metadata":{},"sourceType":"module"}